"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '&1m4reu*^dy%1o2*4bpfo!2zjs0fmdy@4y#&6n_wwg6ijywhg&'
SECRET_KEY= os.environ['SECRET_KEY']

# with open(os.path.join(BASE_DIR, 'www_dir', 'secret_key.txt')) as f:
#     SECRET_KEY=f.read().strip()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# 운영모드에서는 debug정보를 false로 해 놓아 노출되지 않도록 함

ALLOWED_HOSTS = ['192.168.56.101','localhost','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'polls.apps.PollsConfig',                 #추가
    'books.apps.BooksConfig',                 #추가
    # 'books',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db', 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL='/static/'


# 장고의 디폴트 설정을 유지하면서 로깅 설정함.
LOGGING={
    'version':1, 
    'disable_existing_loggers':False,
    'formatters':{
        'verbose':{
            'format':"[%(asctime)s]%(levelname)s [%(name)s:%(lineno)s]%(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers':{
        'file':{
            'level':'DEBUG',
            'class':'logging.FileHandler',
            'filename':os.path.join(BASE_DIR, 'logs', 'mysite.log'),
            'formatter':'verbose'
        },
    },
    'loggers':{
        'polls':{
            'handlers':['file'],
            'level':'DEBUG',
         },
    },
}

STATIC_ROOT=os.path.join(BASE_DIR, 'www_dir', 'static')
"""
위 디렉토리는 웹서버의 설정파일에도 등록해줘야 합니다.  아파치의 httpd.conf인 경우 
Alias/static/항목으로 등록하는데, 8.4.1절의 [예제8-4]를 참고바랍니다.

collectstatic 명령은 다음과 같이 실행합니다. 이 명령을 사용 시 주의할 점음 settings모듈의 
STATICFILES_DIRS 항목에, STATIC_ROOT 항목에서 정의된 디렉토리가 포함되면 안된다는 것입니다.

STATIFILES_DIRS 항목에 정의된 디렉토리에서 정적 파일을 찾아 STATIC_ROOT 디렉토리에 복사해 주기 
때문입니다.
"""

